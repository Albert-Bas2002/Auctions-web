// <auto-generated />
using System;
using Auction.UserService.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Auction.AuctionService.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20250523175153_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Auction.AuctionService.Data.Entities.AuctionDetailsEntity", b =>
                {
                    b.Property<Guid>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuctionCreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Reserve")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("AuctionId");

                    b.ToTable("AuctionsDetails");
                });

            modelBuilder.Entity("Auction.AuctionService.Data.Entities.AuctionStatusEntity", b =>
                {
                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuctionWinnerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasAuctionWinner")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCloseByCreator")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCloseByModerator")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompletelyFinished")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDealCompletedByAuctionCreator")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDealCompletedByAuctionWinner")
                        .HasColumnType("boolean");

                    b.HasKey("AuctionId");

                    b.ToTable("AuctionsStatus");
                });

            modelBuilder.Entity("Auction.AuctionService.Data.Entities.BidEntity", b =>
                {
                    b.Property<Guid>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BidCreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("BidId");

                    b.HasIndex("AuctionId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("Auction.AuctionService.Data.Entities.AuctionStatusEntity", b =>
                {
                    b.HasOne("Auction.AuctionService.Data.Entities.AuctionDetailsEntity", "AuctionDetails")
                        .WithOne("AuctionStatus")
                        .HasForeignKey("Auction.AuctionService.Data.Entities.AuctionStatusEntity", "AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuctionDetails");
                });

            modelBuilder.Entity("Auction.AuctionService.Data.Entities.BidEntity", b =>
                {
                    b.HasOne("Auction.AuctionService.Data.Entities.AuctionDetailsEntity", null)
                        .WithMany()
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Auction.AuctionService.Data.Entities.AuctionDetailsEntity", b =>
                {
                    b.Navigation("AuctionStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
